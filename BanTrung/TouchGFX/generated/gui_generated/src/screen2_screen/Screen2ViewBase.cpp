/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include<images/SVGDatabase.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_ID));
    add(background);

    death_line.setPosition(0, 238, 240, 15);
    death_linePainter.setColor(touchgfx::Color::getColorFromRGB(71, 27, 26));
    death_line.setPainter(death_linePainter);
    death_line.setStart(0, 15);
    death_line.setEnd(240, 15);
    death_line.setLineWidth(15);
    death_line.setLineEndingStyle(touchgfx::Line::SQUARE_CAP_ENDING);
    add(death_line);

    red.setPosition(24, 0, 24, 24);
    red.setCenter(12, 12);
    red.setRadius(12);
    red.setLineWidth(0);
    red.setArc(0, 360);
    redPainter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    red.setPainter(redPainter);
    red.setVisible(false);
    add(red);

    yellow.setPosition(48, 0, 24, 24);
    yellow.setCenter(12, 12);
    yellow.setRadius(12);
    yellow.setLineWidth(0);
    yellow.setArc(0, 360);
    yellowPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 0));
    yellow.setPainter(yellowPainter);
    yellow.setVisible(false);
    add(yellow);

    green.setPosition(0, 0, 24, 24);
    green.setCenter(12, 12);
    green.setRadius(12);
    green.setLineWidth(0);
    green.setArc(0, 360);
    greenPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    green.setPainter(greenPainter);
    green.setVisible(false);
    add(green);

    bullet_ball.setPosition(0, 0, 240, 320);
    bullet_ball.setCenter(120, 270);
    bullet_ball.setRadius(12);
    bullet_ball.setLineWidth(0);
    bullet_ball.setArc(0, 360);
    bullet_ballPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    bullet_ball.setPainter(bullet_ballPainter);
    add(bullet_ball);

    Back.setIconBitmaps(Bitmap(BITMAP_BACK_ID), Bitmap(BITMAP_BACK_ID));
    Back.setIconXY(0, 0);
    Back.setAction(flexButtonCallback);
    Back.setPosition(208, 288, 32, 32);
    add(Back);

    scoreArea.setXY(0, 296);
    scoreArea.setColor(touchgfx::Color::getColorFromRGB(77, 255, 0));
    scoreArea.setLinespacing(0);
    Unicode::snprintf(scoreAreaBuffer, SCOREAREA_SIZE, "%s", touchgfx::TypedText(T_SCORE).getText());
    scoreArea.setWildcard(scoreAreaBuffer);
    scoreArea.resizeToCurrentText();
    scoreArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9WI8));
    add(scoreArea);

    arrow_svg.setSVG(SVG_BLUE_ARROW_SVG_ID);
    arrow_svg.setPosition(0, 0, 240, 320);
    arrow_svg.setScale(0.2f, 0.1f);
    arrow_svg.setImagePosition(120, 230);
    arrow_svg.setRotationCenter(120, 256);
    arrow_svg.setRotation(0.0f);
    add(arrow_svg);
}

Screen2ViewBase::~Screen2ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Back)
    {
        //backtoMenu
        //When Back clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenWipeTransitionEast();
    }
}

void Screen2ViewBase::handleTickEvent()
{
    //tickEvent
    //When every N tick call virtual function
    //Call tickEvent
    tickEvent();
}

void Screen2ViewBase::lose_screen()
{
    //lose_game
    //When lose_screen is called change screen to Screen3
    //Go to Screen3 with no screen transition
    application().gotoScreen3ScreenNoTransition();
}
